apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: '{{ include "flexvol.fullname" . }}'
  labels:
    app.kubernetes.io/name: {{ include "flexvol.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "flexvol.chart" . }}
spec:
  selector:
    matchLabels:
      gluster-subvol-plugin: {{ include "flexvol.fullname" . }}
  template:
    metadata:
      labels:
        gluster-subvol-plugin: {{ include "flexvol.fullname" . }}
    spec:
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      containers:
        - name: plugin-installer
          image: {{ .Values.installerImage }}
          command: [ "/entry_flexvol.sh" ]
          securityContext:
            privileged: true
            runAsUser: 0
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
{{ toYaml .Values.resources.installer | indent 12 }}
          volumeMounts:
            {{ if .Values.tlsSecret -}}
            - name: cakeys
              readOnly: true
              mountPath: /tlskeys
            {{ end -}}
            - name: etcssl
              mountPath: /etcssl
            - name: flexpath
              mountPath: /flexpath
            - name: var-lib-glusterd
              mountPath: /glusterd
        #-- Logrotate is disabled because the log files are written into
        #-- /var/log/* and the logrotate on the host is resolnsible for
        #-- managing data consumption there.
        # - name: logrotate
        #   image: {{ .Values.installerImage }}
        #   command: [ "/entry_logrotate.sh" ]
        #   securityContext:
        #     runAsUser: 0
        #   env:
        #     - name: LOGFILE
        #       value: "*.log"
        #   volumeMounts:
        #     - name: var-log-glusterfs
        #      mountPath: /log
        - name: logs
          image: {{ .Values.installerImage }}
          command: [ "/entry_logtail.sh" ]
          securityContext:
            runAsUser: 0
          env:
            - name: LOGFILE
              value: "*.log"
          resources:
{{ toYaml .Values.resources.logs | indent 12 }}
          volumeMounts:
            - name: var-log-glusterfs
              mountPath: /log
      serviceAccount: '{{ include "flexvol.fullname" . }}'
      terminationGracePeriodSeconds: 10
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
        {{ if .Values.tlsSecret -}}
        - name: cakeys
          secret:
            secretName: {{ .Values.tlsSecret }}
        {{ end -}}
        - name: etcssl
          hostPath:
            path: /etc/ssl
            type: DirectoryOrCreate
        - name: flexpath
          hostPath:
            path: {{ .Values.flexvolPath }}
            type: DirectoryOrCreate
        - name: var-lib-glusterd
          hostPath:
            path: /var/lib/glusterd
            type: DirectoryOrCreate
        - name: var-log-glusterfs
          hostPath:
            path: /var/log/glusterfs
            type: DirectoryOrCreate
  # Make sure DS pod stays running before continuing rollout
  minReadySeconds: 30
  updateStrategy:
    # Automatically update the DS pods
    type: RollingUpdate
    rollingUpdate:
      # Limit update concurrency
      maxUnavailable: 5
